public final class com/gradleup/librarian/core/VersionKt {
	public static final field VERSION Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/ChangelogKt {
	public static final fun processChangelog (Ljava/lang/String;)Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/GH {
	public fun <init> (Ljava/nio/file/Path;)V
	public final fun addTeam (Ljava/lang/String;Ljava/lang/String;)V
	public final fun addTopics (Ljava/util/List;)V
	public final fun allowWorkflowWrite ()V
	public final fun createBranch (Ljava/lang/String;)V
	public final fun enablePages (Ljava/lang/String;)V
	public final fun repository ()Lcom/gradleup/librarian/core/tooling/GitHubRepository;
	public final fun setDescription (Ljava/lang/String;)V
	public final fun setSecret (Ljava/lang/String;Ljava/lang/String;)V
	public final fun setUrl (Ljava/lang/String;)V
}

public final class com/gradleup/librarian/core/tooling/GHKt {
	public static final fun GH (Ljava/nio/file/Path;)Lcom/gradleup/librarian/core/tooling/GH;
	public static final fun getAvailableOrganizations ()Ljava/util/List;
	public static final fun gitHubRepositoryOrNull (Ljava/nio/file/Path;)Lcom/gradleup/librarian/core/tooling/GitHubRepository;
}

public final class com/gradleup/librarian/core/tooling/GitHubRepository {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun getName ()Ljava/lang/String;
	public final fun getOwner ()Ljava/lang/String;
	public final fun rawUrl (Ljava/lang/String;)Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/JsonKt {
	public static final fun toJsonElement (Ljava/lang/String;)Lkotlinx/serialization/json/JsonElement;
}

public final class com/gradleup/librarian/core/tooling/KeysKt {
	public static final fun armored ([B)Ljava/lang/String;
	public static final fun dearmored (Ljava/lang/String;)[B
	public static final fun secretKeyRing (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/gradleup/librarian/core/tooling/SecretKeyRing;
	public static final fun secretKeyRingOrNull (Ljava/nio/file/Path;)Lcom/gradleup/librarian/core/tooling/SecretKeyRing;
	public static final fun uploadKey (Ljava/lang/String;[B)Lcom/gradleup/librarian/core/tooling/UploadResult;
}

public final class com/gradleup/librarian/core/tooling/PreRelease {
	public fun <init> (Ljava/lang/String;I)V
	public final fun getName ()Ljava/lang/String;
	public final fun getVersion ()I
}

public final class com/gradleup/librarian/core/tooling/ProcessKt {
	public static final fun runCommand (Ljava/nio/file/Path;[Ljava/lang/String;)V
	public static final fun runCommandAndCaptureStdout (Ljava/nio/file/Path;[Ljava/lang/String;)Lcom/gradleup/librarian/core/tooling/ProcessResult;
}

public final class com/gradleup/librarian/core/tooling/ProcessResult {
	public fun <init> (Ljava/lang/String;ILjava/lang/String;)V
	public final fun getCode ()I
	public final fun getStdout ()Ljava/lang/String;
	public final fun stdoutOrThrow ()Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/ResourceKt {
	public static final fun makeExecutable (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public static final fun readBinaryResource (Ljava/lang/String;)[B
	public static final fun readTextResource (Ljava/lang/String;)Ljava/lang/String;
	public static final fun substituteVariables (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
	public static final fun substituteVariables (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;
	public static final fun writeTextTo (Ljava/lang/String;Ljava/nio/file/Path;)V
}

public final class com/gradleup/librarian/core/tooling/SecretKeyRing {
	public fun <init> (Lorg/bouncycastle/openpgp/PGPSecretKeyRing;)V
	public final fun publicKey ()[B
	public final fun secretKey ()[B
}

public final class com/gradleup/librarian/core/tooling/SemverKt {
	public static final fun copy (Lcom/gradleup/librarian/core/tooling/PreRelease;Ljava/lang/String;I)Lcom/gradleup/librarian/core/tooling/PreRelease;
	public static final fun copy (Lcom/gradleup/librarian/core/tooling/Version;IIILcom/gradleup/librarian/core/tooling/PreRelease;Z)Lcom/gradleup/librarian/core/tooling/Version;
	public static synthetic fun copy$default (Lcom/gradleup/librarian/core/tooling/PreRelease;Ljava/lang/String;IILjava/lang/Object;)Lcom/gradleup/librarian/core/tooling/PreRelease;
	public static synthetic fun copy$default (Lcom/gradleup/librarian/core/tooling/Version;IIILcom/gradleup/librarian/core/tooling/PreRelease;ZILjava/lang/Object;)Lcom/gradleup/librarian/core/tooling/Version;
	public static final fun next (Lcom/gradleup/librarian/core/tooling/Version;)Lcom/gradleup/librarian/core/tooling/Version;
	public static final fun nextMinor (Lcom/gradleup/librarian/core/tooling/Version;)Lcom/gradleup/librarian/core/tooling/Version;
	public static final fun nextPatch (Lcom/gradleup/librarian/core/tooling/Version;)Lcom/gradleup/librarian/core/tooling/Version;
	public static final fun toVersionOrNull (Ljava/lang/String;)Lcom/gradleup/librarian/core/tooling/Version;
}

public final class com/gradleup/librarian/core/tooling/Tag_and_bumpKt {
	public static final fun getCurrentVersion ()Ljava/lang/String;
	public static final fun tagAndBump (Lcom/gradleup/librarian/core/tooling/Version;)V
}

public final class com/gradleup/librarian/core/tooling/UploadError : com/gradleup/librarian/core/tooling/UploadResult {
	public fun <init> (Ljava/lang/String;)V
	public final fun getMessage ()Ljava/lang/String;
}

public abstract interface class com/gradleup/librarian/core/tooling/UploadResult {
}

public final class com/gradleup/librarian/core/tooling/UploadSuccess : com/gradleup/librarian/core/tooling/UploadResult {
	public fun <init> (Ljava/lang/String;)V
	public final fun getUrl ()Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/Version {
	public fun <init> (IIILcom/gradleup/librarian/core/tooling/PreRelease;Z)V
	public final fun compareTo (Lcom/gradleup/librarian/core/tooling/Version;)I
	public final fun getMajor ()I
	public final fun getMinor ()I
	public final fun getPatch ()I
	public final fun getPreRelease ()Lcom/gradleup/librarian/core/tooling/PreRelease;
	public final fun isSnapshot ()Z
	public fun toString ()Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/init/ActionsKt {
	public static final fun initActions (Ljava/nio/file/Path;Ljava/lang/String;Z)V
}

public final class com/gradleup/librarian/core/tooling/init/ChangelogKt {
	public static final fun initChangelog (Ljava/nio/file/Path;)V
}

public final class com/gradleup/librarian/core/tooling/init/Code_styleKt {
	public static final fun initCodeStyle (Ljava/nio/file/Path;Ljava/lang/String;)V
}

public final class com/gradleup/librarian/core/tooling/init/GithubKt {
	public static final fun initGitHub (Ljava/nio/file/Path;)V
}

public final class com/gradleup/librarian/core/tooling/init/GitignoreKt {
	public static final fun initGitIgnore (Ljava/nio/file/Path;)V
}

public final class com/gradleup/librarian/core/tooling/init/Gradle_wrapperKt {
	public static final fun initGradleWrapper (Ljava/nio/file/Path;)V
}

public final class com/gradleup/librarian/core/tooling/init/LibrarianKt {
	public static final fun initLibrarian (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Lcom/gradleup/librarian/core/tooling/init/SonatypeBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/gradleup/librarian/core/tooling/init/SupportedLicense;Ljava/lang/String;Ljava/lang/String;)V
	public static final fun toBaseUrl (Lcom/gradleup/librarian/core/tooling/init/SonatypeBackend;)Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/init/LicenseKt {
	public static final fun currentYear ()Ljava/lang/String;
	public static final fun guessLicenseOrNull (Ljava/nio/file/Path;)Lcom/gradleup/librarian/core/tooling/init/SupportedLicense;
	public static final fun initLicense (Ljava/nio/file/Path;Lcom/gradleup/librarian/core/tooling/init/SupportedLicense;Ljava/lang/String;Ljava/lang/String;)V
	public static final fun toSupportedLicense (Ljava/lang/String;)Lcom/gradleup/librarian/core/tooling/init/SupportedLicense;
}

public final class com/gradleup/librarian/core/tooling/init/MetadataKt {
	public static final fun initMetadata (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
}

public final class com/gradleup/librarian/core/tooling/init/ProjectKt {
	public static final fun getKotlinPluginVersion ()Ljava/lang/String;
	public static final fun initProject (Ljava/nio/file/Path;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/gradleup/librarian/core/tooling/GitHubRepository;ZLcom/gradleup/librarian/core/tooling/init/SonatypeBackend;)V
	public static final fun writeBinaryTo ([BLjava/nio/file/Path;)V
}

public final class com/gradleup/librarian/core/tooling/init/Secrets {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun getSigningPrivateKey ()Ljava/lang/String;
	public final fun getSigningPrivateKeyPassword ()Ljava/lang/String;
	public final fun getSonatypePassword ()Ljava/lang/String;
	public final fun getSonatypeUsername ()Ljava/lang/String;
}

public final class com/gradleup/librarian/core/tooling/init/SecretsKt {
	public static final fun initSecrets (Ljava/nio/file/Path;Lcom/gradleup/librarian/core/tooling/init/Secrets;)V
}

public final class com/gradleup/librarian/core/tooling/init/SonatypeBackend : java/lang/Enum {
	public static final field Default Lcom/gradleup/librarian/core/tooling/init/SonatypeBackend;
	public static final field Portal Lcom/gradleup/librarian/core/tooling/init/SonatypeBackend;
	public static final field S01 Lcom/gradleup/librarian/core/tooling/init/SonatypeBackend;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/gradleup/librarian/core/tooling/init/SonatypeBackend;
	public static fun values ()[Lcom/gradleup/librarian/core/tooling/init/SonatypeBackend;
}

public final class com/gradleup/librarian/core/tooling/init/SonatypeRelease : java/lang/Enum {
	public static final field Automatic Lcom/gradleup/librarian/core/tooling/init/SonatypeRelease;
	public static final field Manual Lcom/gradleup/librarian/core/tooling/init/SonatypeRelease;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/gradleup/librarian/core/tooling/init/SonatypeRelease;
	public static fun values ()[Lcom/gradleup/librarian/core/tooling/init/SonatypeRelease;
}

public final class com/gradleup/librarian/core/tooling/init/SupportedLicense : java/lang/Enum {
	public static final field MIT Lcom/gradleup/librarian/core/tooling/init/SupportedLicense;
	public final fun getDisplayName ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/gradleup/librarian/core/tooling/init/SupportedLicense;
	public static fun values ()[Lcom/gradleup/librarian/core/tooling/init/SupportedLicense;
}

public final class com/gradleup/librarian/core/tooling/init/WritersideKt {
	public static final fun initWriterside (Ljava/nio/file/Path;Lcom/gradleup/librarian/core/tooling/GitHubRepository;)V
}

